<style>
    .moveButtons {
        line-height: 35px;
    }

    /*.updateButton{padding:15px 0px 0px 45px;}*/
    .btn {
        font-weight: bold;
    }

    .ui-multiselect-filter input {
        color: #333 !important;
    }

    #upFaciltyName {
        width: 75%;
    }

    #facilityName {
        width: 100%;
    }

    .main-content {
        margin-top: 15px;
    }

    .panel-body {
        height: 250px;
    }

    ul li span {
        padding: 4px;
        vertical-align: middle;
    }

    body {
        overflow-x: hidden;
    }
</style>
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery.multiselect.css'); ?>" type="text/css" />
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/toastify.min.css'); ?>" type="text/css" />
<script src="<?php echo $this->basePath('assets/js/jquery.multiselect.js'); ?>" type="text/javascript"></script>
<div class="main-content">
    <div class="widget widget-fullwidth widget-small" style="padding:5px;">
        <div class="row" id="resetPassword">
            <div class="col-sm-12">
                <div class="panel panel-default">
                    <div class="panel-body" style="height:auto !important;">
                        <h3><?= $this->translate('Reset Password for ') . $result['email']; ?></h3>
                        <form role="form" name="resetPasswordForm" id="resetPasswordForm" enctype="multipart/form-data" method="post" action="<?php echo $this->url('users', array('action' => 'reset-password')); ?>" autocomplete="off">
                            <div class="form-group col-lg-6">
                                <label><?= $this->translate('NewPassword'); ?> <span class="mandatory">*</span> </label>
                                <input type="password" placeholder="<?= $this->translate('New Password'); ?>" class="form-control isRequired" name="newPassword" id="newPassword" title="<?= $this->translate('Please enter your new password'); ?>">
                                <input type="hidden" class="form-control" id="userId" name="userId" value="<?php echo base64_encode($result->id); ?>" />
                                <input type="hidden" class="form-control" id="userfirstName" name="userfirstName" value="<?php echo $result->first_name; ?>" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label><?= $this->translate('Confirm Password'); ?> <span class="mandatory">*</span> </label>
                                <input type="password" placeholder="<?= $this->translate('Confirm Password'); ?>" class="form-control isRequired confirmPassword" name="newPassword" id="confirmPassword" title="<?= $this->translate('Please check your new password and confirm password are same'); ?>">
                            </div>
                            <div class="form-group col-lg-6">
                                <button type="button" id="generatePassword" onclick="passwordType();" class="btn btn-default"><b><?= $this->translate("Generate Random Password"); ?></b></button><br>
                                <!-- <code>< ?= _("Password must be at least 12 characters long and must include AT LEAST one number, <br>one alphabet and may have special characters.") ?></code><br> -->
                            </div>
                            <div class="spacer  col-lg-12">
                                <button type="button" onclick="resetPassword();" class="btn btn-space btn-primary"><?= $this->translate('Reset Password'); ?></button>
                                <button type="button" id="closeModel" onclick="window.parent.closeModal();" class="btn btn-warning"><b><?= $this->translate("Cancel"); ?></b></button><br>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script src="<?php echo $this->basePath('assets/js/toastify-js'); ?>" type="text/javascript"></script>
<script>
    function passwordType() {
        document.getElementById('newPassword').type = "text";
        document.getElementById('confirmPassword').type = "text";
        $.post("<?php echo $this->url('common', ['action' => 'generate-password']); ?>", {
            },
            function(data) {
                console.log(data);
                $("#newPassword").val(data);
                $("#confirmPassword").val(data);
                var cpy = copyToClipboard(document.getElementById("confirmPassword"));
                if (cpy == true) {
                    Toastify({
                        text: "<?= $this->translate("Random password generated and copied to clipboard"); ?>",
                        duration: 3000,
                    }).showToast();
                }
            });
    }

    function copyToClipboard(elem) {
        // Check if the element is an input/textarea
        var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
        var target, origSelectionStart, origSelectionEnd;

        if (isInput) {
            // Use the element's value for selection and copy
            target = elem;
            origSelectionStart = elem.selectionStart;
            origSelectionEnd = elem.selectionEnd;
        } else {
            // Create a temporary textarea for non-input elements
            var targetId = "_hiddenCopyText_";
            target = document.getElementById(targetId);
            if (!target) {
                target = document.createElement("textarea");
                target.style.position = "absolute";
                target.style.left = "-9999px";
                target.id = targetId;
                document.body.appendChild(target);
            }
            target.value = elem.textContent; // Use textContent for non-input elements
        }

        // Select the content
        var currentFocus = document.activeElement;
        target.focus();
        target.setSelectionRange(0, target.value.length);

        // Copy the selection
        var succeed;
        try {
            succeed = document.execCommand("copy");
        } catch (e) {
            succeed = false;
        }

        // Restore original focus
        if (currentFocus && typeof currentFocus.focus === "function") {
            currentFocus.focus();
        }

        if (isInput) {
            // Restore the original selection for input elements
            elem.setSelectionRange(origSelectionStart, origSelectionEnd);
        } else {
            // Clear the temporary textarea
            target.value = "";
        }

        return succeed;
    }

    function resetPassword() {
        flag = deforayValidator.init({
            formId: 'resetPasswordForm'
        });
        if(flag){
            var form = $('#resetPasswordForm');
            var formData = new FormData(form[0]); // Get form data
            $.ajax({
                url: form.attr('action'), // Form action URL
                type: 'POST',
                data: formData,
                contentType: false, // Required for FormData
                processData: false, // Prevents jQuery from processing the data
                success: function (data) {
                    alert("<?= $this->translate("Passsword Changed successfully"); ?>");
                    parent.closeModal();
                    parent.window.location.href = window.parent.location.href;
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }
    }
</script>